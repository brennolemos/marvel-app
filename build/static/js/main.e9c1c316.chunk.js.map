{"version":3,"sources":["assets/marvel_logo.svg","components/Header/Header-styles.ts","components/Header/Header.tsx","assets/search.svg","components/Search/Search-styles.ts","components/Search/Search.tsx","components/CharactersListItem/CharactersListItem-styles.ts","components/CharactersListItem/CharactersListItem.tsx","services/api.ts","components/CharactersList/CharactersList-styles.ts","components/Loading/Loading-styles.ts","components/Loading/Loading.tsx","components/Error/Error-styles.ts","components/Error/Error.tsx","components/CharactersList/CharactersList.tsx","styles/global.ts","components/Footer/Footer-styles.ts","components/Footer/Footer.tsx","components/CharacterDetails/CharacterDetails-styles.ts","components/CharacterDetails/CharacterDetails.tsx","App.tsx","index.tsx"],"names":["Header","styled","header","exact","to","src","logo","alt","Form","form","Search","input","Button","button","icon","name","setName","onSubmit","event","preventDefault","id","type","placeholder","required","value","onChange","target","CharactersListItem","li","Content","p","character","thumbnail","path","extension","API_URL","process","PUBLIC_KEY","PRIVATE_KEY","fetchApi","a","resource","offset","ts","Date","getTime","hash","md5","url","uri","stringifyUrl","query","apikey","axios","get","CharactersList","ul","Wrapper","div","Loading","Error","error","React","useState","data","setData","filteredData","setFilteredData","loading","setLoading","setError","fetchData","results","message","useEffect","filter","undefined","includes","toLowerCase","map","createGlobalStyle","Footer","footer","InfosWrapper","section","Image","ListsWrapper","List","NavLink","CharacterDetails","useParams","style","backgroundImage","description","comics","items","length","item","index","series","stories","App","pages","setPages","wait","infiniteScroll","window","scrollY","document","body","offsetHeight","innerHeight","setTimeout","addEventListener","removeEventListener","basename","className","page","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9c1c316.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel_logo.597ccdec.svg\";","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1rem 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(30, 60, 90, 0.1);\r\n  position: relative;\r\n\r\n  a {\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/marvel_logo.svg';\r\nimport * as S from './Header-styles';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <NavLink exact to=\"/\">\r\n      <S.Header>\r\n        <img src={logo} alt=\"Marvel\" />\r\n      </S.Header>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/search.af8226e5.svg\";","import styled from 'styled-components';\r\n\r\nimport icon from '../../assets/search.svg';\r\n\r\nexport const Form = styled.form`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  padding: 0 0.5rem;\r\n`;\r\n\r\nexport const Search = styled.input`\r\n  border-radius: 0.25rem;\r\n  border: 1px solid var(--white);\r\n  padding: 1rem;\r\n  box-shadow: 0 4px 8px rgba(30, 60, 90, 0.1);\r\n  transition: all 0.3s ease;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 6px 12px rgba(30, 60, 90, 0.2);\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 4rem;\r\n  height: 4rem;\r\n  background: url(${icon}) no-repeat center center;\r\n  text-indent: -150px;\r\n  border: none;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  outline: none;\r\n  box-shadow: none;\r\n`;\r\n","import React, { FormEvent } from 'react';\r\n\r\nimport * as S from './Search-styles';\r\n\r\ntype SearchProps = {\r\n  name: string;\r\n  setName: (name: string) => void;\r\n};\r\n\r\nconst Search = ({ name, setName }: SearchProps) => {\r\n  const handleSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <S.Form onSubmit={handleSubmit}>\r\n      <S.Search\r\n        name=\"search\"\r\n        id=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Input search text...\"\r\n        required\r\n        value={name}\r\n        onChange={({ target }) => setName(target.value)}\r\n      />\r\n      <S.Button type=\"submit\"></S.Button>\r\n    </S.Form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from 'styled-components';\r\n\r\nexport const CharactersListItem = styled.li`\r\n  background-color: var(--white);\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 4px rgba(30, 60, 90, 0.1);\r\n  border: 1px solid transparent;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    margin-top: -0.5rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  padding: 1rem;\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as S from './CharactersListItem-styles';\r\n\r\ntype CharacterProps = {\r\n  character: Character;\r\n};\r\n\r\ntype Character = {\r\n  id: string;\r\n  name: string;\r\n  thumbnail: {\r\n    extension: string;\r\n    path: string;\r\n  };\r\n};\r\n\r\nconst CharactersListItem = ({ character }: CharacterProps) => {\r\n  return (\r\n    <NavLink to={`${character.id}`}>\r\n      <S.CharactersListItem>\r\n        <img\r\n          src={`${character.thumbnail.path}/standard_fantastic.${character.thumbnail.extension}`}\r\n          alt=\"\"\r\n        />\r\n        <S.Content>{character.name}</S.Content>\r\n      </S.CharactersListItem>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default CharactersListItem;\r\n","import axios from 'axios';\r\nimport md5 from 'md5';\r\nimport { stringifyUrl } from 'query-string';\r\n\r\nconst API_URL = process.env.REACT_APP_MARVEL_API_BASE;\r\nconst PUBLIC_KEY = process.env.REACT_APP_MARVEL_PUBLIC_KEY;\r\nconst PRIVATE_KEY = process.env.REACT_APP_MARVEL_PRIVATE_KEY;\r\n\r\nexport const fetchApi = async (resource = '', offset = 0) => {\r\n  const ts = new Date().getTime();\r\n  const hash = md5(`${ts}${PRIVATE_KEY}${PUBLIC_KEY}`);\r\n  const url = `${API_URL}/${resource}`;\r\n  const uri = stringifyUrl({\r\n    url: url,\r\n    query: {\r\n      ts: ts,\r\n      apikey: PUBLIC_KEY,\r\n      hash: hash,\r\n      offset: offset,\r\n    },\r\n  });\r\n  return axios.get(uri);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const CharactersList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n  margin: auto;\r\n  width: 4rem;\r\n  height: 4rem;\r\n  border-radius: 50%;\r\n  border: 10px solid rgba(255, 255, 255, 0.5);\r\n  border-right-color: transparent;\r\n  animation: loading 0.8s infinite;\r\n\r\n  @keyframes loading {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as S from './Loading-styles';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <S.Wrapper>\r\n      <S.Loading />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import styled from 'styled-components';\r\n\r\nexport const Error = styled.div`\r\n  color: var(--red);\r\n  background-color: var(--pink);\r\n  padding: 0.75rem 1.25rem;\r\n  border-radius: 0.25rem;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as S from './Error-styles';\r\n\r\ntype ErrorProps = {\r\n  error: string;\r\n};\r\n\r\nconst Error = ({ error }: ErrorProps) => {\r\n  return <S.Error>Error: {error}</S.Error>;\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nimport CharactersListItem from '../CharactersListItem';\r\nimport { fetchApi } from '../../services/api';\r\nimport * as S from './CharactersList-styles';\r\n\r\nimport Loading from '../Loading';\r\nimport Error from '../Error';\r\n\r\ntype Character = {\r\n  id: string;\r\n  name: string;\r\n  thumbnail: {\r\n    extension: string;\r\n    path: string;\r\n  };\r\n};\r\n\r\ntype SearchProps = {\r\n  name: string;\r\n  offset: number;\r\n};\r\n\r\nconst CharactersList = ({ name, offset }: SearchProps) => {\r\n  const [data, setData] = React.useState<Character[] | null>(null);\r\n  const [filteredData, setFilteredData] = React.useState<Character[] | null>(\r\n    null,\r\n  );\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data } = await fetchApi('characters', offset);\r\n      setFilteredData(data.data.results);\r\n      setData(data.data.results);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const filter =\r\n      data?.filter((character) => character.name.includes(name)) !== undefined\r\n        ? data?.filter((character) =>\r\n            character.name.toLowerCase().includes(name.toLowerCase()),\r\n          )\r\n        : data;\r\n    setFilteredData(filter);\r\n  }, [name]);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  if (filteredData === null) return null;\r\n\r\n  return (\r\n    <S.CharactersList>\r\n      {filteredData.map((character) => (\r\n        <CharactersListItem key={character.id} character={character} />\r\n      ))}\r\n    </S.CharactersList>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  :root {\r\n    --white: #fff;\r\n    --gray-fa: #fafafa;\r\n    --gray-e: #eee;\r\n    --gray-20: #202020;\r\n\r\n    --red: #721c24;\r\n    --marvel-red: #ED1D24;\r\n    --pink: #f8d7da;\r\n  }\r\n\r\n  ul, li {\r\n    margin: 0;\r\n    padding: 0;\r\n  } \r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n  }\r\n\r\n\r\n  *, button, input {\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    font-family: 'Oxygen', sans-serif;\r\n    color: var(--gray-20);\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .App {\r\n    display: flex;\r\n    min-height: 100vh;\r\n    flex-direction: column;\r\n    background-color: var(--gray-fa);\r\n  }\r\n\r\n  .container {\r\n    padding: 2rem 1.5rem;\r\n    flex: 1 1;\r\n    max-width: 75rem;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    html {\r\n      font-size: 93.75%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    html {\r\n      font-size: 87.5%;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Footer = styled.footer`\r\n  background-color: var(--gray-20);\r\n  text-align: center;\r\n  padding: 1rem;\r\n  color: var(--white);\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as S from './Footer-styles';\r\n\r\nconst Footer = () => {\r\n  return <S.Footer>Made with ❤️ and React by Breno Lemos</S.Footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const InfosWrapper = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n  border-radius: 0.25rem;\r\n  box-shadow: 0 6px 12px rgba(30, 60, 90, 0.2);\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 576px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n\r\n  h1 {\r\n    font-size: 2rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  p {\r\n    line-height: 1.4;\r\n    max-width: 25rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.div`\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-right: 1px solid var(--gray-fa);\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    height: 0;\r\n    padding-bottom: 75%;\r\n  }\r\n`;\r\n\r\nexport const ListsWrapper = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  padding: 1rem;\r\n  border-radius: 0.25rem;\r\n  box-shadow: 0 6px 12px rgba(30, 60, 90, 0.2);\r\n\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n\r\n  li {\r\n    border-bottom: 1px solid var(--gray-fa);\r\n    padding: 1rem 0;\r\n\r\n    &:last-child {\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled(NavLink)`\r\n  background-color: var(--marvel-red);\r\n  color: var(--white);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.25rem;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { fetchApi } from '../../services/api';\r\nimport Loading from '../Loading';\r\nimport Error from '../Error';\r\n\r\nimport * as S from './CharacterDetails-styles';\r\n\r\ntype ParamsProps = {\r\n  id: string;\r\n};\r\n\r\ntype CharacterDetailsProps = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  comics: {\r\n    items: Info[];\r\n  };\r\n  series: {\r\n    items: Info[];\r\n  };\r\n  stories: {\r\n    items: Info[];\r\n  };\r\n  thumbnail: {\r\n    extension: string;\r\n    path: string;\r\n  };\r\n};\r\n\r\ntype Info = {\r\n  name: string;\r\n};\r\n\r\nconst CharacterDetails = () => {\r\n  const { id } = useParams<ParamsProps>();\r\n\r\n  const [data, setData] = React.useState<CharacterDetailsProps | null>(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const { data } = await fetchApi(`characters/${id}`);\r\n        setData(data.data.results[0]);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  if (data === null) return null;\r\n\r\n  return (\r\n    <>\r\n      <S.InfosWrapper>\r\n        <S.Image\r\n          style={{\r\n            backgroundImage: `url('${data.thumbnail.path}.${data.thumbnail.extension}')`,\r\n          }}\r\n        />\r\n        <S.Content>\r\n          <h1>{data.name}</h1>\r\n          <p>{data.description}</p>\r\n        </S.Content>\r\n      </S.InfosWrapper>\r\n\r\n      <S.ListsWrapper>\r\n        {data.comics.items.length > 0 && (\r\n          <S.List>\r\n            <h2>Comics</h2>\r\n            <ul>\r\n              {data.comics.items.map((item, index) => (\r\n                <li key={index}>{item.name}</li>\r\n              ))}\r\n            </ul>\r\n          </S.List>\r\n        )}\r\n\r\n        {data.series.items.length > 0 && (\r\n          <S.List>\r\n            <h2>Series</h2>\r\n            <ul>\r\n              {data.series.items.map((item, index) => (\r\n                <li key={index}>{item.name}</li>\r\n              ))}\r\n            </ul>\r\n          </S.List>\r\n        )}\r\n\r\n        {data.stories.items.length > 0 && (\r\n          <S.List>\r\n            <h2>Stories</h2>\r\n            <ul>\r\n              {data.stories.items.map((item, index) => (\r\n                <li key={index}>{item.name}</li>\r\n              ))}\r\n            </ul>\r\n          </S.List>\r\n        )}\r\n      </S.ListsWrapper>\r\n\r\n      <S.Button exact to=\"/\">\r\n        Go Back\r\n      </S.Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport CharactersList from './components/CharactersList';\n\nimport GlobalStyles from './styles/global';\nimport Footer from './components/Footer';\nimport CharacterDetails from './components/CharacterDetails';\n\nconst App = () => {\n  const [name, setName] = React.useState('');\n  const [pages, setPages] = React.useState([0]);\n\n  React.useEffect(() => {\n    let wait = false;\n    const infiniteScroll: EventListener = (event: Event) => {\n      const scroll = window.scrollY;\n      const height = document.body.offsetHeight - window.innerHeight;\n      if (scroll > height * 0.75 && !wait) {\n        setPages((pages) => [...pages, pages.length * 20]);\n        wait = true;\n\n        setTimeout(() => {\n          wait = false;\n        }, 1000);\n      }\n    };\n\n    if (name === '') {\n      window.addEventListener('wheel', infiniteScroll);\n      window.addEventListener('scroll', infiniteScroll);\n    }\n\n    return () => {\n      window.removeEventListener('wheel', infiniteScroll);\n      window.removeEventListener('scroll', infiniteScroll);\n    };\n  }, []);\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <GlobalStyles />\n        <Header />\n        <main className=\"container\">\n          <Route path={'/'} exact>\n            <Search name={name} setName={setName} />\n            {pages.map((page) => (\n              <CharactersList key={page} offset={page} name={name} />\n            ))}\n          </Route>\n          <Route path={'/:id'} component={CharacterDetails} />\n        </main>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}